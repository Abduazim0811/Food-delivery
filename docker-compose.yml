version: '3.8'

services:
  api_gateway:
    build: ./api-gateway
    container_name: api_gateway
    ports:
      - 7778:7778
    depends_on:
      - delivery_service
      - order_service
      - user_service
      - payment_service
      - product_service
      - broker
    networks:
      - mynetwork
  user_service:
    build: ./user-service
    container_name: user_service
    environment:
      - PG_URL=postgres://postgres:Abdu0811@user_postgres:5432/food_delivery?sslmode=disable
    ports:
      - 8888:8888
    depends_on:
      - user_postgres
      - redis
      - broker
    networks:
      - mynetwork
  product_service:
    build: ./product-service
    container_name: product_service
    environment:
      - MONGO_URL=mongodb://product_mongo:27017/products
    ports:
      - 9999:9999
    depends_on:
      - product_mongo
    networks:
      - mynetwork
  payment_service:
    build: ./payment-service
    container_name: payment_service
    environment:
      - PG_URL=postgres://postgres:Abdu0811@payment_service:5432/paymentservice?sslmode=disable
    ports:
      - 9998:9998
    depends_on:
      - payment_postgres
      - user_service
      - order_service
    networks:
      - mynetwork
  order_service:
    build: ./order-service
    container_name: order_service
    environment:
      - MONGO_URL=mongodb://order_mongo:27017/orders
    ports:
      - 7777:7777
    depends_on:
      - order_mongo
      - user_service
      - product_service
    networks:
      - mynetwork
  notification_service:
    build: ./notification-service
    container_name: notification_service
    ports:
      - 8083:8083
      - 7676:7676
    depends_on:
      - broker
      - order_service
    networks:
      - mynetwork
  delivery_service:
    build: ./delivery-service
    container_name: delivery_service
    environment:
      - MONGO_URL=mongodb://delivery_mongo:27017/delivery
    ports:
      - 9898:9898
    depends_on:
      - delivery_mongo
      - order_service
    networks:
      - mynetwork

  broker:
    image: apache/kafka:latest
    container_name: kafka_broker
    ports:
      - "9092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:29093
      KAFKA_LISTENERS: PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
    networks:
      - mynetwork

  user_postgres:
    image: postgres:14-alpine
    container_name: user_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Abdu0811
      POSTGRES_DB: food_delivery
      PGDATA: /var/lib/postgresql/data
    volumes:
      - user-db-data:/var/lib/postgresql/data
      - ./user-service/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5435:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d food_delivery || exit 1"]
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 10s
    networks:
      - mynetwork
  
  payment_postgres:
    image: postgres:14-alpine
    container_name: payment_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Abdu0811
      POSTGRES_DB: paymentservice
      PGDATA: /var/lib/postgresql/data
    volumes:
      - payment-db-data:/var/lib/postgresql/data
      - ./payment-service/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5436:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d paymentservice || exit 1"]
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 10s
    networks:
      - mynetwork

  migrate_payment:
    image: migrate/migrate
    volumes:
      - ./payment-service/migrations:/migrations
    command: ["-path", "/migrations", "-database", "postgres://postgres:Abdu0811@payment_postgres:5432/paymentservice?sslmode=disable", "up"]
    depends_on:
      user_postgres:
        condition: service_healthy
    networks:
      - mynetwork
    
  migrate_user:
    image: migrate/migrate
    volumes:
      - ./user-service/migrations:/migrations
    command: ["-path", "/migrations", "-database", "postgres://postgres:Abdu0811@user_postgres:5432/food_delivery?sslmode=disable", "up"]
    depends_on:
      user_postgres:
        condition: service_healthy
    networks:
      - mynetwork
  
  product_mongo:
    image: mongo:latest
    container_name: product_mongo
    environment:
      MONGO_INITDB_DATABASE: Product
    ports:
      - "27018:27017"
    volumes:
      - product-db-data:/data/db
    networks:
      - mynetwork

  order_mongo:
    image: mongo:latest
    container_name: order_mongo
    environment:
      MONGO_INITDB_DATABASE: Order
    ports:
      - "27019:27017"
    volumes:
      - order-db-data:/data/db
    networks:
      - mynetwork
  
  delivery_mongo:
    image: mongo:latest
    container_name: delivery_mongo
    environment:
      MONGO_INITDB_DATABASE: Delivery
    ports:
      - "27020:27017"
    volumes:
      - delivery-db-data:/data/db
    networks:
      - mynetwork

  redis:
    image: redis:latest
    container_name: redis_container
    ports:
      - "6378:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep -q PONG || exit 1"]
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 10s
    networks:
      - mynetwork
networks:
  mynetwork:
    driver: bridge

volumes:
  user-db-data:
  payment-db-data:
  product-db-data:
  order-db-data:
  delivery-db-data: